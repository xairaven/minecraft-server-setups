# Toggles the player's AFK state.
afk {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afk=true
        away=true
        nafk=true
        naway=true
    }
}
# Kicks all currently AFK players.
afkkick {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afkkick=false
        kickafk=false
        nafkkick=false
        nkickafk=false
    }
}
# Invalidates the AFK permission cache.
afkrefresh {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afkrefresh=true
        nafkrefresh=true
    }
}
# Opens an anvil window so users can repair and rename items.
anvil {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        anvil=false
        nanvil=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows a user to return to their last place before death or warp.
back {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        back=false
        nback=false
        nreturn=false
        return=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Bans a player.
ban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ban=true
        nban=true
    }
}
# Send an "Action Bar" message to players.
basicactionbar {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basicactionbar=false
        nbasicactionbar=false
    }
}
# Send a Subtitle message to players.
basicsubtitle {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basicsubtitle=false
        nbasicsubtitle=false
    }
}
# Send a Title message to players.
basictitle {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basictitle=false
        nbasictitle=false
    }
}
# Get information about the block you are currently facing.
blockinfo {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        blockinfo=false
        nblockinfo=false
    }
}
# Sets the target block to air.
blockzap {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        blockzap=false
        nblockzap=false
        nzapblock=false
        zapblock=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Broadcasts a message to the entire server.
broadcast {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        bc=true
        bcast=true
        broadcast=true
        nbc=true
        nbcast=true
        nbroadcast=true
    }
}
# Checks the ban status for a player.
checkban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkban=true
        ncheckban=true
    }
}
# Checks if a player is jailed.
checkjail {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkjail=false
        ncheckjail=false
    }
}
# Returns a list of currently jailed players, optionally in the specified jail.
checkjailed {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkjailed=false
        ncheckjailed=false
    }
}
# Checks whether the specified player is muted.
checkmute {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkmute=false
        ncheckmute=false
    }
}
# Returns a list of currently muted players.
checkmuted {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkmuted=false
        ncheckmuted=false
    }
}
# Allows the user to check a player's notes.
checknotes {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checknotes=false
        nchecknotes=false
        nnotes=false
        notes=false
    }
}
# Clears a player's inventory.
clear {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ci=false
        clear=false
        clearinv=false
        clearinvent=false
        clearinventory=false
        nci=false
        nclear=false
        nclearinv=false
        nclearinvent=false
        nclearinventory=false
    }
}
# Allows a user to clear another user's current "back" position.
clearback {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearback=false
        nclearback=false
    }
}
# Allows the user to clear a player's notes.
clearnotes {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearnotes=false
        nclearnotes=false
        nremoveallnotes=false
        removeallnotes=false
    }
}
# Returns information about a command
commandinfo {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        commandinfo=false
        ncommandinfo=false
    }
}
# Enables or disables seeing commands that others have run.
commandspy {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        commandspy=true
        ncommandspy=true
    }
}
# Deletes your current nickname
delnick {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletenick=false
        delnick=false
        delnickname=false
        ndeletenick=false
        ndelnick=false
        ndelnickname=false
    }
}
# Allows the user to enchant items.
enchant {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        enchant=false
        enchantment=false
        nenchant=false
        nenchantment=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Opens an enchanting table window so users can enchant items.
enchantingtable {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        enchantingtable=false
        enchanttable=false
        etable=false
        nenchantingtable=false
        nenchanttable=false
        netable=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to inspect their (or another player's) ender chest.
enderchest {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ec=false
        echest=false
        enderchest=false
        nec=false
        nechest=false
        nenderchest=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Get information about the entity you are currently facing.
entityinfo {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        entityinfo=false
        nentityinfo=false
    }
}
# Displays the specified player's current experience.
exp {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        exp=false
        experience=false
        nexp=false
        nexperience=false
        nxp=false
        xp=false
    }
}
# Gives experience to the specified player.
"exp.give" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the specified player's experience.
"exp.set" {
    # Sets whether a command is enabled.
    enabled=false
}
# Removes experience from the specified player.
"exp.take" {
    # Sets whether a command is enabled.
    enabled=false
}
# Extinguishes a player that is currently burning
extinguish {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ext=false
        extinguish=false
        next=false
        nextinguish=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Set specified player's hunger to full.
feed {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        eat=false
        feed=false
        neat=false
        nfeed=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# If set, warp to the new player spawn point.
firstspawn {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        firstspawn=false
        nfirstspawn=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Set specified player's fly mode.
fly {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        fly=false
        nfly=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Freezes a player in place.
freezeplayer {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        freeze=false
        freezeplayer=false
        nfreeze=false
        nfreezeplayer=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets a player's game mode.
gamemode {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gamemode=true
        gm=true
        ngamemode=false
        ngm=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles your game mode between survival and creative.
"gamemode.gmt" {
    # Sets whether a command is enabled.
    enabled=false
}
# Gets all users last seen on the specified IP.
getfromip {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        getfromip=false
        ngetfromip=false
    }
}
# Gets the location of the executing or target player.
getpos {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        coords=false
        getloc=false
        getlocation=false
        getpos=true
        ncoords=false
        ngetloc=false
        ngetlocation=false
        ngetpos=false
        nposition=false
        nwhereami=false
        position=false
        whereami=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Enable or disable a server wide mute. Anyone that has the permission "nucleus.globalmute.voice.auto" will always have voice.
globalmute {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        globalmute=false
        nglobalmute=false
    }
}
# Toggles your game mode to adventure.
gma {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        adventure=false
        gma=false
        nadventure=false
        ngma=false
    }
}
# Toggles your game mode to creative.
gmc {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        creative=false
        gmc=false
        ncreative=false
        ngmc=false
    }
}
# Toggles your game mode to survival.
gms {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gms=false
        ngms=false
        nsurvival=false
        survival=false
    }
}
# Toggles your game mode to spectator.
gmsp {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gmsp=false
        ngmsp=false
        nspectator=false
        spectator=false
    }
}
# Set specified player's invulnerability status.
god {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        god=false
        invuln=false
        invulnerability=false
        ngod=false
        ninvuln=false
        ninvulnerability=false
    }
}
# Puts the item in the player's hand on their head as a helmet.
hat {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        hat=false
        head=false
        nhat=false
        nhead=false
    }
}
# Fully heal the specified player.
heal {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        heal=false
        nheal=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to all available staff
helpop {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        helpop=false
        nhelpop=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Teleports to home.
home {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=5
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        home=true
        nhome=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Deletes a home.
"home.delete" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletehome=true
        delhome=true
        ndeletehome=false
        ndelhome=false
    }
}
# Deletes another player's home.
"home.deleteother" {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletehomeother=false
        delhomeother=false
        ndeletehomeother=false
        ndelhomeother=false
    }
}
# Display the number of homes you (or another player) can set.
"home.limit" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists homes.
"home.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homes=true
        listhomes=true
        nhomes=false
        nlisthomes=false
    }
}
# Teleports to another player's home.
"home.other" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homeother=false
        nhomeother=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets a home with the specified name.
"home.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=5
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homeset=true
        nhomeset=false
        nsethome=false
        sethome=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the specified player on fire.
ignite {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        burn=false
        ignite=false
        nburn=false
        nignite=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles ignoring of all chat messages.
ignore {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ignore=false
        nignore=false
    }
}
# Shows the names of players that are currently being ignored by the target player
ignorelist {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ignored=false
        ignorelist=false
        listignore=false
        nignored=false
        nignorelist=false
        nlistignore=false
    }
}
# Get server information.
info {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        einfo=false
        info=false
        neinfo=false
        ninfo=false
    }
}
# Allows the user to inspect a target's inventory.
invsee {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        invsee=true
        ninvsee=false
    }
}
# Get information about the item you are currently holding.
iteminfo {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        itemdb=false
        iteminfo=false
        nitemdb=false
        niteminfo=false
    }
}
# Base command for Item Name related actions.
itemname {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        itemname=false
        nitemname=false
    }
}
# Clears the name assigned to the item currently in the player's hand.
"itemname.clear" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearitemname=false
        nclearitemname=false
        nresetitemname=false
        resetitemname=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the user facing name for the item currently in the player's hand.
"itemname.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrenameitem=false
        nsetitemname=false
        renameitem=false
        setitemname=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Jails a player.
jail {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        jail=false
        njail=false
    }
}
# Lists all jails.
jails {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        jails=false
        njails=false
    }
}
# Deletes a jail.
"jails.delete" {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletejail=false
        deljail=false
        ndeletejail=false
        ndeljail=false
        nrmjail=false
        rmjail=false
    }
}
# Creates a jail.
"jails.set" {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        createjail=false
        ncreatejail=false
        nsetjail=false
        setjail=false
    }
}
# Warp to a jail.
"jails.tp" {
    # Sets whether a command is enabled.
    enabled=false
}
# Perform a short range "jump" to the block they are looking at.
jump {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        j=false
        jmp=false
        jump=false
        nj=false
        njmp=false
        njump=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Kicks a player
kick {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kick=true
        nkick=false
    }
}
# Kicks all players, optionally turning the whitelist on.
kickall {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kickall=true
        nkickall=false
    }
}
# Kill the specified player(s) and/or entities.
kill {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kill=false
        nkill=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Kills the specified entities.
killentity {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        killentity=false
        nkillentity=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Redeems a kit.
kit {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kit=false
        nkit=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets or unsets a kit to auto redeem on login.
"kit.autoredeem" {
    # Sets whether a command is enabled.
    enabled=false
}
# Lists the commands associated with a kit.
"kit.command" {
    # Sets whether a command is enabled.
    enabled=false
}
# Adds a command to the specified kit.
"kit.command.add" {
    # Sets whether a command is enabled.
    enabled=false
}
# Removes all commands from the specified kit.
"kit.command.clear" {
    # Sets whether a command is enabled.
    enabled=false
}
# Removes a command from the specified kit.
"kit.command.remove" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the cooldown on a kit.
"kit.cooldown" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the cost for a kit.
"kit.cost" {
    # Sets whether a command is enabled.
    enabled=false
}
# Opens a chest window and lets you create a kit through the Minecraft inventory interface.
"kit.create" {
    # Sets whether a command is enabled.
    enabled=false
}
# Opens a GUI for editing kit contents.
"kit.edit" {
    # Sets whether a command is enabled.
    enabled=false
}
# Redeems a kit on the specified player.
"kit.give" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets whether a kit is displayed in the kit list.
"kit.hidden" {
    # Sets whether a command is enabled.
    enabled=false
}
# Lists information about the kit.
"kit.info" {
    # Sets whether a command is enabled.
    enabled=false
}
# Lists the kits that are available.
"kit.list" {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kits=false
        nkits=false
    }
}
# Sets or unsets a kit as a one time use kit.
"kit.onetime" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets whether a separate permission is required to redeem a kit, if separate permissions is enabled in the config.
"kit.permissionbypass" {
    # Sets whether a command is enabled.
    enabled=false
}
# Discards cached kit information and reloads data from persistence.
"kit.reload" {
    # Sets whether a command is enabled.
    enabled=false
}
# Deletes a kit.
"kit.remove" {
    # Sets whether a command is enabled.
    enabled=false
}
# Renames a kit
"kit.rename" {
    # Sets whether a command is enabled.
    enabled=false
}
# Resets a player's usage of a kit, allowing them to redeem the kit again immediately.
"kit.resetusage" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the items in a kit to your current inventory.
"kit.set" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets up a kit so it gets redeemed for every new player that joins the server.
"kit.setfirstjoin" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets or unsets whether redeeming a kit will notify the target user.
"kit.toggleredeemmessage" {
    # Sets whether a command is enabled.
    enabled=false
}
# View the contents of a kit.
"kit.view" {
    # Sets whether a command is enabled.
    enabled=false
}
# Fire exploding cats from your person.
kittycannon {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kc=false
        kittycannon=false
        nkc=false
        nkittycannon=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Strikes a position or player with a lightning bolt.
lightning {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lightning=false
        nlightning=false
        nshock=false
        nsmite=false
        nstrike=false
        nthor=false
        shock=false
        smite=false
        strike=false
        thor=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Lists the players on the server.
list {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        list=true
        listplayers=false
        ls=false
        nlist=false
        nlistplayers=false
        nls=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Locks the weather on the specified world.
lockweather {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        killweather=false
        lockweather=false
        nkillweather=false
        nlockweather=false
    }
}
# Base command for Lore related actions.
lore {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lore=false
        nlore=false
    }
}
# Adds a new line to the lore on the current item in the hand.
"lore.add" {
    # Sets whether a command is enabled.
    enabled=false
}
# Clears the lore on the current item in the hand.
"lore.clear" {
    # Sets whether a command is enabled.
    enabled=false
}
# Deletes a line of the lore on the current item in the hand at a specific line.
"lore.delete" {
    # Sets whether a command is enabled.
    enabled=false
}
# Edits the lore on the current item in the hand at a specific line.
"lore.edit" {
    # Sets whether a command is enabled.
    enabled=false
}
# Inserts a new line to the lore on the current item in the hand at a specific line.
"lore.insert" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the lore on the current item in the hand. The current lore is replaced.
"lore.set" {
    # Sets whether a command is enabled.
    enabled=false
}
# Retrieves mail that has been sent to you.
mail {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        email=false
        mail=false
        nemail=false
        nmail=false
    }
}
# Clears all mail in your inbox.
"mail.clear" {
    # Sets whether a command is enabled.
    enabled=false
}
# Read others' mail.
"mail.other" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sends a mail to the specified player.
"mail.send" {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsendmail=false
        sendmail=false
    }
}
# Formats the next chat message as an action, using the format set by the server.
me {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        action=false
        me=true
        naction=false
        nme=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to a player, or the console with "-".
message {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        m=true
        message=true
        msg=true
        nm=false
        nmessage=false
        nmsg=false
        nt=false
        nw=false
        nwhisper=false
        t=false
        w=false
        whisper=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets item in hand to a full stack.
more {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        more=false
        nmore=false
        nstack=false
        stack=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to view the server MOTD, as defined in the "motd.txt" file.
motd {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        motd=false
        nmotd=false
    }
}
# Prevent players from private messaging you.
msgtoggle {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        messagetoggle=false
        msgtoggle=false
        mtoggle=false
        nmessagetoggle=false
        nmsgtoggle=false
        nmtoggle=false
    }
}
# Mutes the specified player.
mute {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        mute=false
        nmute=false
    }
}
# Bans a specific IGN (rather than specific player) from joining the server.
nameban {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nameban=false
        nnameban=false
    }
}
# Allows a specific IGN (rather than specific player) to join the server again.
nameunban {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        namepardon=false
        nameunban=false
        nnamepardon=false
        nnameunban=false
    }
}
# List players nearby
near {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        near=false
        nnear=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets your nickname/display name
nick {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nick=false
        nickname=false
        nnick=false
        nnickname=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to add a note to a player.
note {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        addnote=false
        naddnote=false
        nnote=false
        note=false
    }
}
# Displays Nucleus version and module information.
nucleus {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nucleus=true
    }
}
# Lists any compatibility issues that have been detected.
"nucleus.compatibility" {
    # Sets whether a command is enabled.
    enabled=true
}
# Utilities to support debugging server issues.
"nucleus.debug" {
    # Sets whether a command is enabled.
    enabled=false
}
# Gets all UUIDs that appear to be registered to a username.
"nucleus.debug.getuuids" {
    # Sets whether a command is enabled.
    enabled=false
}
# Refreshes the {{uniquecount}} token, in case it's out of sync.
"nucleus.debug.refreshuniquevisitors" {
    # Sets whether a command is enabled.
    enabled=false
}
# Verifies that all command keys are set correctly
"nucleus.debug.verifycmds" {
    # Sets whether a command is enabled.
    enabled=false
}
# Generates Nucleus documentation data files
"nucleus.docgen" {
    # Sets whether a command is enabled.
    enabled=false
}
# Gets or refreshes a user's entry in the username cache.
"nucleus.getuser" {
    # Sets whether a command is enabled.
    enabled=false
}
# Creates a file in the server root directory containing information about the server and Nucleus environment.
"nucleus.info" {
    # Sets whether a command is enabled.
    enabled=false
}
# Clears the in-memory cache of users who have logged on in the past session, forcing Nucleus to read the data files on their next login.
"nucleus.nucleus" {
    # Sets whether a command is enabled.
    enabled=false
}
# Prints all permissions registered in Nucleus.
"nucleus.printperms" {
    # Sets whether a command is enabled.
    enabled=true
}
# Rebuild the Nucleus user cache.
"nucleus.rebuildusercache" {
    # Sets whether a command is enabled.
    enabled=true
}
# Reloads Nucleus' configuration files.
"nucleus.reload" {
    # Sets whether a command is enabled.
    enabled=true
}
# Resets a user's first join status.
"nucleus.resetfirstjoin" {
    # Sets whether a command is enabled.
    enabled=false
}
# Deletes all data in Nucleus, and optionally, Minecraft, for a player.
"nucleus.resetuser" {
    # Sets whether a command is enabled.
    enabled=true
}
# Saves all files.
"nucleus.save" {
    # Sets whether a command is enabled.
    enabled=true
}
# Allows the user to add the recommended permissions for either USER, MOD or ADMIN roles to a specified group.
"nucleus.setupperms" {
    # Sets whether a command is enabled.
    enabled=false
}
# Gets and sets Nucleus user preferences.
nuserprefs {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nuserprefs=false
        userprefs=false
    }
}
# Displays the current latency for the target player.
ping {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nping=false
        ping=false
    }
}
# Allows the user to send a broadcast without prefixes or suffixes.
plainbroadcast {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npbc=false
        npbcast=false
        nplainbroadcast=false
        pbc=false
        pbcast=false
        plainbroadcast=false
    }
}
# Binds the item in hand to the specified command.
powertool {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npowertool=false
        npt=false
        powertool=false
        pt=false
    }
}
# Removes any powertool bindings to the item in hand.
"powertool.delete" {
    # Sets whether a command is enabled.
    enabled=false
}
# Lists all current powertools that the user has.
"powertool.list" {
    # Sets whether a command is enabled.
    enabled=false
}
# Gets the player's realname from the provided nickname.
realname {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrealname=false
        realname=false
    }
}
# Allows the user to delete a specific note attached to a player.
removenote {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletenote=false
        delnote=false
        ndeletenote=false
        ndelnote=false
        nremovenote=false
        removenote=false
    }
}
# Repairs item in hand.
repair {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        fix=false
        mend=false
        nfix=false
        nmend=false
        nrepair=false
        repair=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to the last player that sent you a message.
reply {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nr=false
        nreply=false
        r=true
        reply=true
    }
}
# Fires a player upwards like a rocket.
rocket {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrocket=false
        rocket=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to teleport to a random destination within the world border.
rtp {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrandomteleport=false
        nrteleport=false
        nrtp=false
        randomteleport=false
        rteleport=false
        rtp=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Read the server rules.
rules {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrules=false
        rules=false
    }
}
# Gets information about the specified player.
seen {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lookup=true
        nlookup=false
        nseen=false
        nseenplayer=false
        seen=true
        seenplayer=false
    }
}
# Provides functions for modifying the server list.
serverlist {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nserverlist=false
        nsl=false
        serverlist=false
        sl=false
    }
}
# Allows for temporary modification of the server list MOTD, on a timed basis.
"serverlist.message" {
    # Sets whether a command is enabled.
    enabled=false
}
# Displays server runtime statistics.
serverstat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nserverstat=false
        nuptime=false
        serverstat=false
        uptime=true
    }
}
# Displays the current server time.
servertime {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrealtime=false
        nservertime=false
        realtime=true
        servertime=true
    }
}
# Sets the new player spawn point.
setfirstspawn {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetfirstspawn=false
        setfirstspawn=false
    }
}
# Removes the new player spawn point.
"setfirstspawn.del" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the Nucleus language for self or a given player.
setnucleuslanguage {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetnuclang=false
        nsetnucleuslanguage=false
        setnuclang=false
        setnucleuslanguage=false
    }
}
# Sets the current world spawn point.
setspawn {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetspawn=false
        setspawn=true
    }
}
# Shows or hides item attributes on item hover.
showitemattributes {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nshowattributes=false
        nshowitemattributes=false
        showattributes=false
        showitemattributes=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Spawns in copies of the specified player's skull (or your own, if no player is specified) into your inventory.
skull {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nskull=false
        skull=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# See all private messages sent to other players.
socialspy {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsocialspy=false
        socialspy=false
    }
}
# Warp to a world spawn point.
spawn {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nspawn=false
        spawn=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Warp another player to a world spawn point.
"spawn.other" {
    # Sets whether a command is enabled.
    enabled=true
}
# Spawns in mobs at the specified player's location.
spawnmob {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        mobspawn=false
        nmobspawn=false
        nspawnentity=false
        nspawnmob=false
        spawnentity=false
        spawnmob=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets or gets the specified player's walking or flying speed.
speed {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nspeed=false
        speed=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to chat in the staff chat channel.
staffchat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        a=false
        na=false
        nsc=false
        nstaffchat=false
        sc=false
        staffchat=false
    }
}
# Stops the server.
stop {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nstop=false
        stop=false
    }
}
# Forces a player to run a command.
sudo {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsudo=false
        sudo=false
    }
}
# Kill your player, displaying the Game Over screen.
suicide {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsuicide=false
        suicide=false
    }
}
# Teleports one player to another's location.
teleport {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntele=false
        nteleport=false
        ntp=false
        tele=false
        teleport=false
        tp=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to send a message to a player without prefixes or suffixes.
tellplain {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nplaintell=false
        nptell=false
        ntellplain=false
        plaintell=false
        ptell=false
        tellplain=false
    }
}
# Temporarily bans a player.
tempban {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntempban=false
        tempban=false
    }
}
# Teleport to the other side of a wall.
thru {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nthrough=false
        nthru=false
        through=false
        thru=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Gets the time for the specified world.
time {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntime=false
        time=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the time for the specified world.
"time.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsettime=false
        ntimeset=false
        settime=false
        timeset=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles whether powertools activate.
toggle {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntoggle=false
        toggle=false
    }
}
# Toggles whether the user is receiving staff chat messages.
toggleviewstaffchat {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntoggleviewstaffchat=false
        ntogglevsc=false
        nvsc=false
        toggleviewstaffchat=false
        togglevsc=false
        vsc=false
    }
}
# Teleports the user (or target player) to the surface.
top {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntop=false
        ntosurface=false
        ntotop=false
        top=false
        tosurface=false
        totop=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a request to a player to ask for you to teleport to them.
tpa {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        call=false
        ncall=false
        nteleportask=false
        ntpa=false
        ntpask=false
        teleportask=false
        tpa=true
        tpask=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Request all players on the server to teleport to your location.
tpaall {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntpaall=false
        ntpaskall=false
        tpaall=false
        tpaskall=false
    }
}
# Accept a pending teleport request.
tpaccept {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportaccept=false
        ntpaccept=false
        ntpyes=false
        teleportaccept=false
        tpaccept=true
        tpyes=true
    }
}
# Send a request to a player to ask them to teleport to you.
tpahere {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportaskhere=false
        ntpahere=false
        ntpaskhere=false
        teleportaskhere=false
        tpahere=true
        tpaskhere=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Forcefully teleport all players on the server to your location.
tpall {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntpall=false
        ntpallhere=false
        tpall=false
        tpallhere=false
    }
}
# Deny a pending teleport request.
tpdeny {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportdeny=false
        ntpdeny=false
        ntpno=false
        teleportdeny=false
        tpdeny=true
        tpno=true
    }
}
# Teleports a player to your location.
tphere {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntph=false
        ntphere=false
        tph=false
        tphere=true
    }
}
tpn {
    # Sets whether a command is enabled.
    enabled=false
}
# Teleport to the specified location.
tppos {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntppos=false
        tppos=true
    }
}
# Toggle whether teleport requests are received.
tptoggle {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntptoggle=false
        tptoggle=false
    }
}
# Opens an inventory window which acts as a disposal unit, deleting items placed into it.
trash {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntrash=false
        trash=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Unbans a player.
unban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npardon=false
        nunban=false
        pardon=false
        unban=true
    }
}
# Unjails a player.
unjail {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunjail=false
        unjail=false
    }
}
# Unmutes the specified player.
unmute {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunmute=false
        unmute=false
    }
}
# Makes the book in the target player's hand writable again.
unsignbook {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunsign=false
        nunsignbook=false
        unsign=false
        unsignbook=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Attempts to nudge players by one block to unstick them, if possible.
unstuck {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunstuck=false
        unstuck=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Scans the messages file for keys that might not include all the required tokens and replaces them with the standard translation.
update-messages {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nupdate-messages=false
        update-messages=false
    }
}
# Toggles whether you are invisible on the server.
vanish {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nv=false
        nvanish=false
        v=false
        vanish=false
    }
}
# Toggles whether you log in to the server vanished.
vanishonlogin {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nvanishonlogin=false
        nvonlogin=false
        vanishonlogin=false
        vonlogin=false
    }
}
# Allows a user to speak when a global mute is in effect.
voice {
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nvoice=false
        voice=false
    }
}
# Teleport to the specified warp.
warp {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nwarp=false
        warp=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Base command for category management.
"warp.category" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all the warp categories in use on the server.
"warp.category.list" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes the description for a category.
"warp.category.removedescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes the display name for a category.
"warp.category.removedisplayname" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the description for a category.
"warp.category.setdescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets a display name for a category.
"warp.category.setdisplayname" {
    # Sets whether a command is enabled.
    enabled=true
}
# Set the cost of the specified warp.
"warp.cost" {
    # Sets whether a command is enabled.
    enabled=false
}
# Lists all warps on the server.
"warp.delete" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        delwarp=true
        ndelwarp=false
        nremwarp=false
        nrmwarp=false
        remwarp=false
        rmwarp=true
    }
}
# Lists all warps on the server.
"warp.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nwarps=false
        warps=true
    }
}
# Sets a warp.
"warp.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetwarp=false
        nwarpset=false
        setwarp=true
        warpset=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the category of a warp for display in /warp list.
"warp.setcategory" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets or removes (with -r) the description for the warp.
"warp.setdescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the weather on the specified world.
weather {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nweather=false
        weather=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Opens a crafting table window so users can craft.
workbench {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0.0
    # Sets whether a command is enabled.
    enabled=false
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        craft=false
        ncraft=false
        nwb=false
        nworkbench=false
        wb=false
        workbench=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Parent command for all other world commands.
world {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nucleusworld=false
        nworld=false
        world=true
    }
}
# Parent command for world border commands.
"world.border" {
    # Sets whether a command is enabled.
    enabled=true
}
# Cancels any current world border generation.
"world.border.cancelgen" {
    # Sets whether a command is enabled.
    enabled=true
}
# Generates chunks up to the world border.
"world.border.gen" {
    # Sets whether a command is enabled.
    enabled=true
}
# Resets the world border to the default width.
"world.border.reset" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the world border.
"world.border.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Clones an existing world and registers it
"world.clone" {
    # Sets whether a command is enabled.
    enabled=false
}
# Creates a world with the specified name and options.
"world.create" {
    # Sets whether a command is enabled.
    enabled=false
}
# Deletes a world from the disc.
"world.delete" {
    # Sets whether a command is enabled.
    enabled=false
}
# Disables a world that is unloaded, preventing it from being loaded in future.
"world.disable" {
    # Sets whether a command is enabled.
    enabled=false
}
# Enables a world, allowing it to be loaded on demand.
"world.enable" {
    # Sets whether a command is enabled.
    enabled=false
}
# Displays a world's game rules.
"world.gamerule" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the specified world's game rule.
"world.gamerule.set" {
    # Sets whether a command is enabled.
    enabled=false
}
# Shows available generators for use when creating a world.
"world.generators" {
    # Sets whether a command is enabled.
    enabled=true
}
# Displays information about one world.
"world.info" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all worlds.
"world.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nworlds=false
        worlds=true
    }
}
# Loads a world that is currently unloaded.
"world.load" {
    # Sets whether a command is enabled.
    enabled=true
}
# Shows available modifiers for use when creating a world.
"world.modifiers" {
    # Sets whether a command is enabled.
    enabled=true
}
# Shows available presets for use when creating a world.
"world.presets" {
    # Sets whether a command is enabled.
    enabled=true
}
# Allows you to rename and unloaded world.
"world.rename" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the difficulty of a world.
"world.setdifficulty" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the gamemode of a world.
"world.setgamemode" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world has hardcore mode enabled.
"world.sethardcore" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets whether a world will keep the chunks around it's spawn point loaded.
"world.setkeepspawnloaded" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world will load on startup.
"world.setloadonstartup" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world has PVP enabled.
"world.setpvpenabled" {
    # Sets whether a command is enabled.
    enabled=false
}
# Sets the spawn point of a world.
"world.setspawn" {
    # Sets whether a command is enabled.
    enabled=true
}
# Teleports to world spawn.
"world.spawn" {
    # Sets whether a command is enabled.
    enabled=true
}
# Teleports you, or another player, to the specified world.
"world.teleport" {
    # Sets whether a command is enabled.
    enabled=true
}
# Unloads a world that is currently loaded.
"world.unload" {
    # Sets whether a command is enabled.
    enabled=false
}
